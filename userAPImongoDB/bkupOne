package main

import (
	"context"
	"fmt"
	"log"
	"net/http"

	"github.com/gorilla/mux"
	"go.mongodb.org/mongo-driver/mongo"
	"go.mongodb.org/mongo-driver/mongo/options"
)

// UserData represents the structure of the data to be stored
type UserData struct {
	IP        string
	UserAgent string
	// Add other fields as needed
}

func main() {
	// Connect to MongoDB
	clientOptions := options.Client().ApplyURI("mongodb://0.tcp.ngrok.io:14753")
	client, err := mongo.Connect(context.TODO(), clientOptions)
	if err != nil {
		log.Fatal(err)
	}

	// Check the connection
	err = client.Ping(context.TODO(), nil)
	if err != nil {
		log.Fatal(err)
	}

	fmt.Println("Connected to MongoDB!")

	// Setup router
	r := mux.NewRouter()
	r.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {
		userData := UserData{
			IP:        r.RemoteAddr,
			UserAgent: r.UserAgent(),
			// Populate other fields as needed
		}

		// Insert data into MongoDB
		collection := client.Database("userDB").Collection("users")
		insertResult, err := collection.InsertOne(context.TODO(), userData)
		if err != nil {
			log.Fatal(err)
		}

		fmt.Println("Inserted a single document: ", insertResult.InsertedID)
		fmt.Fprintf(w, "User Data Captured")
	})

	http.Handle("/", r)

	// Start server
	fmt.Println("Server is starting...")
	log.Fatal(http.ListenAndServe(":9091", nil))
}
